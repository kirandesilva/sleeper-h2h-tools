"""
Functions for making pretty visualizations of Standings objects
"""

from pandas import DataFrame
from plotly.graph_objects import Figure, Table

def draw_h2h_plot(h2h_board_df: DataFrame, write_dest=None) -> Figure:

    """
    Renders a Plotly Figure representing the head-to-head breakdown of a
    Standings object

    Makes a Table showing an `(n+1)`x`(n+2)` matrix where `n` = league size

    The rows represent a given team's head-to-head winrate against all other
    teams, where green, yellow, and red indicate 100%, 50%, and 0% winrates,
    respectively

    PARAMETERS
    ----------
    h2h_board_df : DataFrame
        A DataFrame generated by `Standings.make_h2h_board_df()`

    write_dest : str, default=None
        String path to call `Figure.write_image()`, with appropriate size for
        sending via Discord webhook request; must contain extension, see Plotly
        documentation for which extensions are compatible

    RETURNS
    -------
    fig : Figure
        A Plotly Figure with a Table plot
    """

    map_color = {"0.0": "red", "0.5": "yellow", "1.0": "green", "nan": "black"}

    h2h_board_df = h2h_board_df.copy(deep=True)\
        .reset_index(drop=False, names=["Team"])\
        .rename(columns={"points": "Points"})

    colors = [["lightgrey"] * len(h2h_board_df)]
    for col in h2h_board_df.iloc[:,1:-1]:
        h2h_board_df[col] = h2h_board_df[col].astype(str)
        colors.append(h2h_board_df[col].map(map_color).to_list())

    colors.append(["lightgrey"] * len(h2h_board_df))

    h2h_board_df["Points"] = [round(pt, 2) for pt in h2h_board_df["Points"]]
    fig = Figure(
        data=[
            Table(
                columnwidth=[100] * len(h2h_board_df.columns[:-1]) + [80],
                header={
                    "values": h2h_board_df.columns.to_list(),
                    "line_color": "darkslategray",
                    "fill_color": "paleturquoise",
                    "align": "left"
                },
                cells={
                    "values": [h2h_board_df[col] for col in h2h_board_df],
                    "line_color": "darkslategray",
                    "fill_color": colors,
                    "height": 60,
                    "align": "left"
                }
            )
        ]
    )

    fig.update_layout(
        title_text="Each row represents a team's winrate against" +
        " opponents in the columns"
    )
    new_c = colors
    new_c[0] = ["black"] * len(h2h_board_df)
    new_c[-1] = ["black"] * len(h2h_board_df)

    fig.update_traces(cells={"font": {"color": colors}})

    if write_dest:
        fig.write_image(write_dest, width=1740, height=830, scale=4)
    return fig
